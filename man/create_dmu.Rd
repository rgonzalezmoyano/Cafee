% Generated by roxygen2: do not edit by hand
<<<<<<< HEAD
% Please edit documentation in R/balanced_data.R, R/create_dmu.R
=======
% Please edit documentation in R/balanced_data.R
>>>>>>> 8da7ee7561ed9814dafb9e51a0817b81c0c1a464
\name{create_dmu}
\alias{create_dmu}
\title{Create New DMUs to reach 150 dmus}
\usage{
<<<<<<< HEAD
create_dmu(data, nX, nY, N, type)

create_dmu(data, nX, nY, N, type)
=======
create_dmu(data, x, y, N, type)
>>>>>>> 8da7ee7561ed9814dafb9e51a0817b81c0c1a464
}
\arguments{
\item{data}{A \code{data.frame} containing the variables used in the model.}

<<<<<<< HEAD
\item{N}{number of dmus to create \code{data}.}

\item{type}{class of dmu to create \code{data}.}

\item{x}{Column indexes of the input variables in the \code{data}.}

\item{y}{Column indexes of the output variables in the \code{data}.}

\item{obs_prop}{A \code{table} with the observed proportions of efficient and inefficient DMUs.}
}
\value{
It returns a \code{data.frame} with the newly created set of DMUs incorporated.

It returns a \code{data.frame} with the newly created set of DMUs incorporated.
}
\description{
This function adds DMUs to reach a size of 150.

This function creates new DMUs to address data imbalances. If the majority class is efficient, it generates new inefficient DMUs by worsering the observed units. Conversely, if the majority class is inefficient, it projects inefficient DMUs to the frontier. Finally, a random selection if performed to keep a proportion of 0.65 for the majority class and 0.35 for the minority class.
=======
\item{x}{number of inputs in the \code{data}.}

\item{y}{number of outputs in the \code{data}.}

\item{N}{number of dmus to create \code{data}.}

\item{type}{Class of dmu to create \code{data}.}
}
\value{
It returns a \code{data.frame} with the newly created set of DMUs incorporated.
}
\description{
This function adds DMUs to reach a sample of 150.
>>>>>>> 8da7ee7561ed9814dafb9e51a0817b81c0c1a464
}
